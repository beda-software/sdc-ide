name: actions-demo
on: 
  push:
    branches: [master, test]
jobs:
  Build-New-Image:
    runs-on: ubuntu-latest
    env:
      BRANCH_NAME: ${GITHUB_REF#refs/heads/}
      TIER: ${{ ${GITHUB_REF#refs/heads/} == 'master' && 'production' || 'develop' }}
        # - if: [ "${GITHUB_REF#refs/heads/}" == master ]
        #   when: production
        # - if: [ "${GITHUB_REF#refs/heads/}" != master ]
        #   when: develop
      BUILD_IMAGE: ${{ secrets.DOCKER_HUB_REPOSITORY }}:${GITHUB_REF#refs/heads/}
    steps:
        - run: echo ${{env.TIER}}
        - uses: actions/checkout@v2
        - run: echo "start building new image"
        - run: docker build --build-arg TIER=develop -t ${{ env.BUILD_IMAGE }} .
        -
          name: Login to Docker Hub
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKER_HUB_USERNAME }}
            password: ${{ secrets.DOCKER_HUB_TOKEN }}
        - run: docker push ${{ env.BUILD_IMAGE }}
        - run: docker run --rm ${{ env.BUILD_IMAGE }} yarn typecheck
  # Deploy-New-Image:
  #   runs-on: ubuntu-latest
  #   on: 
  #     push:
  #       branches: [master]
  #   env:
  #     BUILD_IMAGE: ${{ secrets.DOCKER_HUB_REPOSITORY }}:test
  #   steps:
  #       - uses: 

      # username: ${{ secrets.DOCKERHUB_USERNAME }}
      # password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      # - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      # - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      # - name: Check out repository code
      #   uses: actions/checkout@v2
      # - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      # - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      # - name: List files in the repository
      #   run: |
      #     ls ${{ github.workspace }}
      # - run: echo "üçè This job's status is ${{ job.status }}."
